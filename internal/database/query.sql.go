// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: query.sql

package database

import (
	"context"
)

const getAllEvents = `-- name: GetAllEvents :many
SELECT id, title, date, is_national_holiday FROM events ORDER BY date ASC
`

func (q *Queries) GetAllEvents(ctx context.Context) ([]Event, error) {
	rows, err := q.db.QueryContext(ctx, getAllEvents)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Event
	for rows.Next() {
		var i Event
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.Date,
			&i.IsNationalHoliday,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getEventsByMonthAndYear = `-- name: GetEventsByMonthAndYear :many
SELECT id, title, date, is_national_holiday FROM events
WHERE strftime('%Y', date) = ? AND strftime('%m', date) = ?
ORDER BY date ASC
`

type GetEventsByMonthAndYearParams struct {
	Date   string
	Date_2 string
}

func (q *Queries) GetEventsByMonthAndYear(ctx context.Context, arg GetEventsByMonthAndYearParams) ([]Event, error) {
	rows, err := q.db.QueryContext(ctx, getEventsByMonthAndYear, arg.Date, arg.Date_2)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Event
	for rows.Next() {
		var i Event
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.Date,
			&i.IsNationalHoliday,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const insertEvent = `-- name: InsertEvent :exec
INSERT INTO events (title, date, is_national_holiday)
VALUES (?, ?, ?)
ON CONFLICT(title, date) DO NOTHING
`

type InsertEventParams struct {
	Title             string
	Date              string
	IsNationalHoliday bool
}

func (q *Queries) InsertEvent(ctx context.Context, arg InsertEventParams) error {
	_, err := q.db.ExecContext(ctx, insertEvent, arg.Title, arg.Date, arg.IsNationalHoliday)
	return err
}
